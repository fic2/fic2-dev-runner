# HTTPS server
#

geo $http_target_ip $filter {
    default        true; # 1 ~ true
    193.0.0.0/8 false; # 0 ~ false
}

# map $http_target_ip $filter {
#     default        true; # 1 ~ true
#     193.0.0.0/8 false; # 0 ~ false
# }

server {
   rewrite_log on;
   listen       1111 ssl;
   #server_name  localhost;
   #error_page 497  https://$host:$server_port$request_uri;

   ssl on;
   ssl_certificate      /etc/nginx/cert/server.crt;
   ssl_certificate_key  /etc/nginx/cert/server.key;
   ssl_session_cache shared:SSL:1m;
   ssl_session_timeout  5m;
   ssl_ciphers  HIGH:!aNULL:!MD5;
   ssl_prefer_server_ciphers   on;

   # error_page 502 /502.html;
   # location  /502.html {
   #     internal;
   #     add_header "Access-Control-Allow-Origin" "*" always;
   #     return 502;
   # }
      
   location / {

       if ($request_method = OPTIONS ) {
	   # add_header "Access-Control-Allow-Origin" "https://$host" always;
	   add_header "Access-Control-Allow-Origin" "*" always;
       	   add_header "Access-Control-Allow-Methods" "OPTIONS, GET, HEAD, POST, PUT, DELETE" always;
       	   add_header "Access-Control-Allow-Headers" "Target-Ip, Target-Port" always;
       	   add_header Content-Length 0 always;
       	   add_header Content-Type text/plain always;
       	   return 200;
       }

       if ($filter = true) {
	   # add_header "Access-Control-Allow-Origin" "https://$host" always;
	   add_header "Access-Control-Allow-Origin" "*" always;
       	   add_header "Access-Control-Allow-Methods" "OPTIONS, GET, HEAD, POST, PUT, DELETE" always;
       	   add_header "Access-Control-Allow-Headers" "Target-Ip, Target-Port" always;
           return 451;
       }

       # add_header "Access-Control-Allow-Origin" "https://$host" always;
       
       add_header "Access-Control-Allow-Origin" "*" always;
       add_header "Access-Control-Allow-Methods" "OPTIONS, GET, HEAD, POST, PUT, DELETE" always;
       add_header "Access-Control-Allow-Headers" "Target-Ip, Target-Port" always;

       proxy_pass https://$http_target_ip:$http_target_port;
       proxy_set_header Host $host; # nginx public ip
       proxy_set_header X-Forwarded-Host $http_host; # same as the request's HTTP_HOST
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # browser's ip
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Real-IP $remote_addr; # browser's ip
   }

}